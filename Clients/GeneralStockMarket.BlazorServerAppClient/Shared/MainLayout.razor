@inherits LayoutComponentBase
@inject NavigationManager navigationManager
@implements IDisposable
<link href="/css/Client/dist/main.css" rel="stylesheet" />

<LoginUserComponentBase/>

<main>
    <div class="main-container row mx-0">

        @if (IsLeftSideShow)
        {

                <div class="left-side offset-lg-2 col-lg-4 offset-md-1 col-md-5  col-sm-6 px-0 side">
                    <div class="header d-flex flex-column justify-content-center align-items-center px-4">
                        <h3 class="font-weight-bold">Cüzdanım</h3>
                        <img class="img-fluid" src="/img/wallet.svg" alt="wallet" />
                        <NetBalance/>
                    </div>
                    <div class="body">
                        <ul>
                            <li><a href="/orders">Emirler</a></li>
                            <li><a href="/requests">İstekler</a></li>
                            <li><a href="/account">Hesap</a></li>
                            <li><a href="/logout">Güvenli Çıkış</a></li>
                        </ul>
                    </div>

                </div>
                <div class="right-side  col-lg-4 col-md-5 col-sm-6 px-0  side ">
                    @Body
                </div>
        }
        else
        {
            <div class="col-md-8 offset-md-2 col-sm-10 offset-sm-1 px-0  ">
                @Body
            </div>
        }

    </div>


</main>


@code{

    public bool IsLeftSideShow { get; set; }

    private void SideState()
    {
        var url = navigationManager.ToBaseRelativePath(navigationManager.Uri);
        IsLeftSideShow = url.IsEmpty();
    }


    protected override void OnInitialized()
    {
        SideState();
        navigationManager.LocationChanged += HandleLocactionChanged;
    }

    public void Dispose()
    {
        navigationManager.LocationChanged -= HandleLocactionChanged;
    }

    private void HandleLocactionChanged(Object sender, LocationChangedEventArgs args)
    {
        SideState();
        StateHasChanged();
    }

}