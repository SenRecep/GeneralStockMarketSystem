@page "/trade/{Id:guid}"
@attribute [Authorize(Roles = RoleInfo.IsVerified)]
@inject IProductService productService
@inject PhotoHelper photoHelper

<link href="/css/Client/dist/trade.css" rel="stylesheet" />

<div class="page trade-page">
    <PageHeader Title="Alım/Satım" />
    @if (ProductTradeDto.IsNull())
    {
        <Loading />
    }
    else
    {
        <div class="section-one">
            <div class="row">
                <div class="col-sm-4 offset-sm-5 d-flex flex-row align-items-center">
                    <img class="img-fluid" src="@(photoHelper.GetProductImageUrl(ProductTradeDto.ImageName))"
                    alt="product-image" />
                    <p class=" pl-2">
                        @ProductTradeDto.Name
                    </p>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-5 offset-sm-1">
                    <p>Sahip olunan adet: 1999</p>
                    <p>Market Stoğu: 17000</p>
                </div>
                <div class="col-sm-5">
                    <p>Ortalama fiyat: 10.25₺</p>
                </div>
            </div>

        </div>
        <div class="section-one">

            <div class="row">

                <div class="col-sm-6 text-center btn-group offset-sm-3">
                    <button class="btn btn-success btn-lg">Al</button>
                    <button class="btn btn-danger btn-lg">Sat</button>
                </div>

            </div>
            <form>
                <div class="form-row">
                    <div class="form-group col-sm-6">
                        <input class="form-control mb-2" type="text" />
                        <input class="form-control mb-2" type="text" />
                        <input class="form-control" type="submit" />
                    </div>
                </div>
            </form>



        </div>
        <div class="section-one p-0">
            <ul>
                <li>
                    <a>
                        <div class="row">
                            <p class="col-sm-3">İşlem Adeti: 50</p>
                            <p class="col-sm-3">Toplam Fiyat: 100₺</p>
                            <p class="col-sm-3">Birim Fiyat: 2₺</p>
                            <p class="col-sm-3">İşlem Tarihi: 16.10.21</p>
                        </div>
                    </a>
                </li>
                <li>
                    <a>
                        <div class="row">
                            <p class="col-sm-3">İşlem Adeti: 50</p>
                            <p class="col-sm-3">Toplam Fiyat: 100₺</p>
                            <p class="col-sm-3">Birim Fiyat: 2₺</p>
                            <p class="col-sm-3">İşlem Tarihi: 16.10.21</p>
                        </div>
                    </a>
                </li>
                <li>
                    <a>
                        <div class="row">
                            <p class="col-sm-3">İşlem Adeti: 50</p>
                            <p class="col-sm-3">Toplam Fiyat: 100₺</p>
                            <p class="col-sm-3">Birim Fiyat: 2₺</p>
                            <p class="col-sm-3">İşlem Tarihi: 16.10.21</p>
                        </div>
                    </a>
                </li>
                <li>
                    <a>
                        <div class="row">
                            <p class="col-sm-3">İşlem Adeti: 50</p>
                            <p class="col-sm-3">Toplam Fiyat: 100₺</p>
                            <p class="col-sm-3">Birim Fiyat: 2₺</p>
                            <p class="col-sm-3">İşlem Tarihi: 16.10.21</p>
                        </div>
                    </a>
                </li>
            </ul>
        </div>
    }
</div>

@code{
    [Parameter]
    public Guid Id { get; set; }

    public ProductTradeDto ProductTradeDto { get; set; } = null;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        var productResponse = await productService.GetProductByIdAsync(Id);
        if (productResponse.IsSuccessful)
            ProductTradeDto = productResponse.Data;
    }

}